[{"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\index.js":"1","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\App.js":"2","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\reportWebVitals.js":"3","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeGeneration.js":"4","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\chickenMovement.js":"5","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeSolver.js":"6","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\primsGeneration.js":"7","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\kruskalsGeneration.js":"8","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\DFSMaze.js":"9","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\KruskalsMaze.js":"10","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\PrimsMaze.js":"11","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\EllersMaze.js":"12","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\ellersGeneration.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":5146,"mtime":1611541893819,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":7990,"mtime":1611519798747,"results":"18","hashOfConfig":"15"},{"size":2948,"mtime":1611120707260,"results":"19","hashOfConfig":"15"},{"size":6705,"mtime":1611525154840,"results":"20","hashOfConfig":"15"},{"size":6577,"mtime":1611520013928,"results":"21","hashOfConfig":"15"},{"size":7029,"mtime":1611525091513,"results":"22","hashOfConfig":"15"},{"size":707,"mtime":1611522362710,"results":"23","hashOfConfig":"15"},{"size":734,"mtime":1611435467952,"results":"24","hashOfConfig":"15"},{"size":693,"mtime":1611435633011,"results":"25","hashOfConfig":"15"},{"size":724,"mtime":1611512157959,"results":"26","hashOfConfig":"15"},{"size":7813,"mtime":1611519357104,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ik2r73",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\index.js",[],["60","61"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\App.js",["62"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\reportWebVitals.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeGeneration.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\chickenMovement.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeSolver.js",["63"],"\r\nconst mazeSolver={\r\n    intervalCode:0,\r\n    path:[],\r\n    prevV:[],\r\n    isVisited:[],\r\n    allSq:[],\r\n    nextBFSRound:[],\r\n    currBFSRound:[],\r\n\r\n    getNbrKey(currPos, direction){\r\n        const gridSize=mazeSolver.allSq.length;\r\n        var rowSize=0;\r\n        switch(gridSize){\r\n            case 64:\r\n                rowSize=8;\r\n                break;\r\n            case 300:\r\n                rowSize=20;\r\n                break;\r\n            case 1344:\r\n                rowSize=56;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n  \r\n        switch (direction){\r\n            case 'up':\r\n                return (mazeSolver.allSq[currPos].classList.contains('top'))?-1:currPos-rowSize;\r\n            case 'down':\r\n                return (mazeSolver.allSq[currPos].classList.contains('bottom'))?-1:currPos+rowSize;\r\n            case 'left':\r\n                return (mazeSolver.allSq[currPos].classList.contains('left'))?-1:currPos-1;\r\n            case 'right':\r\n                return (mazeSolver.allSq[currPos].classList.contains('right'))?-1:currPos+1;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    extractPath(){\r\n        var exitKey=document.getElementsByClassName('exit')[0].getAttribute('key');\r\n        while(mazeSolver.prevV[exitKey]!==-1){\r\n            mazeSolver.path.unshift(exitKey);\r\n            exitKey=mazeSolver.prevV[exitKey];\r\n        }\r\n        mazeSolver.path.unshift(exitKey);\r\n    },\r\n    backTrackPath(){\r\n\r\n        var timeInterval=0;\r\n        const gridSize=mazeSolver.allSq.length;\r\n        switch(gridSize){\r\n            case 64:\r\n                timeInterval=50;\r\n                break;\r\n            case 300:\r\n                timeInterval=25;\r\n                break;\r\n            case 1344:\r\n                timeInterval=5;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        mazeSolver.intervalCode=setInterval(()=>{\r\n\r\n            if(mazeSolver.path.length===0){\r\n                clearInterval(mazeSolver.intervalCode);\r\n                return;\r\n            }\r\n            \r\n            const lastPos=parseInt(mazeSolver.path.pop(),10);\r\n            mazeSolver.allSq[lastPos].classList.add('current');\r\n        },timeInterval);\r\n    },\r\n    dfs(difficulty){\r\n\r\n        var timeInterval=0;\r\n        var sqId=\"\";\r\n        switch(difficulty){\r\n            case \"easy\":\r\n                timeInterval=40;\r\n                sqId=\"easySquare\";\r\n                break;\r\n            case \"medium\":\r\n                timeInterval=15;\r\n                sqId=\"mediumSquare\";\r\n                break;\r\n            case \"hard\":\r\n                timeInterval=1;\r\n                sqId=\"hardSquare\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //initialize allSq, isVisited, and path\r\n        mazeSolver.allSq=document.getElementsByClassName(sqId);\r\n        for (var i=0;i<mazeSolver.allSq.length;i++){\r\n            mazeSolver.isVisited.push(false);\r\n            mazeSolver.prevV.push(-1);\r\n        }\r\n        const entranceKey=document.getElementsByClassName('entrance')[0].getAttribute('key');\r\n        mazeSolver.isVisited[entranceKey]=true;\r\n        mazeSolver.path.push(entranceKey);\r\n\r\n\r\n        //actual dfs logic starts here\r\n        const nbrPositions=[\"up\",\"left\",\"right\",\"down\"];\r\n\r\n        mazeSolver.intervalCode=setInterval(()=>{\r\n\r\n            //get last element in path\r\n            const currPos=parseInt(mazeSolver.path[mazeSolver.path.length-1],10);\r\n\r\n            //if last element is exit, commence exit backtrack\r\n            if (mazeSolver.allSq[currPos].classList.contains('exit')){\r\n                clearInterval(mazeSolver.intervalCode);\r\n                mazeSolver.backTrackPath();\r\n                return;\r\n            }\r\n\r\n            //if last element not exit, mark current as explored, look at nbrs\r\n            mazeSolver.allSq[currPos].classList.remove('current');\r\n            mazeSolver.allSq[currPos].classList.add('explored');\r\n            for (var i=0;i<4;i++){\r\n                const nbrKey=mazeSolver.getNbrKey(currPos,nbrPositions[i]);\r\n                if (nbrKey!==-1 && !mazeSolver.isVisited[nbrKey]){\r\n                    mazeSolver.isVisited[nbrKey]=true;\r\n                    mazeSolver.path.push(nbrKey);\r\n                    mazeSolver.prevV[nbrKey]=currPos;\r\n                    return;\r\n                }\r\n            }\r\n            mazeSolver.path.pop();\r\n            \r\n        },timeInterval)\r\n    },\r\n    bfs(difficulty){\r\n        var timeInterval=0;\r\n        var sqId=\"\";\r\n        switch(difficulty){\r\n            case \"easy\":\r\n                timeInterval=40;\r\n                sqId=\"easySquare\";\r\n                break;\r\n            case \"medium\":\r\n                timeInterval=15;\r\n                sqId=\"mediumSquare\";\r\n                break;\r\n            case \"hard\":\r\n                timeInterval=100;\r\n                sqId=\"hardSquare\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        //initialize allSq, isVisited, and path\r\n        mazeSolver.allSq=document.getElementsByClassName(sqId);\r\n        for (var i=0;i<mazeSolver.allSq.length;i++){\r\n            mazeSolver.isVisited.push(false);\r\n            mazeSolver.prevV.push(-1);\r\n        }\r\n        const entranceKey=document.getElementsByClassName('entrance')[0].getAttribute('key');\r\n        mazeSolver.isVisited[entranceKey]=true;\r\n        mazeSolver.nextBFSRound.push(entranceKey);\r\n\r\n        const nbrPositions=[\"up\",\"down\",\"left\",\"right\"];\r\n\r\n\r\n        mazeSolver.intervalCode=setInterval(()=>{\r\n\r\n            mazeSolver.currBFSRound=mazeSolver.nextBFSRound.concat();\r\n            mazeSolver.nextBFSRound=[];\r\n            while(mazeSolver.currBFSRound.length>0){\r\n           \r\n                const currKey=parseInt(mazeSolver.currBFSRound.shift(),10);\r\n\r\n                if (mazeSolver.allSq[currKey].classList.contains('exit')){\r\n                    clearInterval(mazeSolver.intervalCode);\r\n                    mazeSolver.extractPath();\r\n                    mazeSolver.backTrackPath();\r\n                }\r\n                for (var i=0;i<4;i++){\r\n                    const nbrKey=mazeSolver.getNbrKey(currKey,nbrPositions[i]);\r\n                    if (nbrKey!==-1 && !mazeSolver.isVisited[nbrKey]){\r\n                        mazeSolver.isVisited[nbrKey]=true;\r\n                        mazeSolver.prevV[nbrKey]=currKey;\r\n                        mazeSolver.allSq[nbrKey].classList.add('explored');\r\n                        mazeSolver.nextBFSRound.push(nbrKey);\r\n                    }\r\n                }\r\n\r\n            }\r\n        },timeInterval)\r\n    }\r\n}\r\n\r\nexport default mazeSolver","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\primsGeneration.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\kruskalsGeneration.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\DFSMaze.js",["64"],"import React, { useEffect,useState } from 'react'\r\nimport mazeGeneration from './mazeGeneration'\r\nimport './Maze.css'\r\n\r\nconst DFSMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        mazeGeneration.createMaze(difficulty);\r\n        \r\n    })\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default DFSMaze","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\KruskalsMaze.js",["65","66"],"import React, { useEffect,useState } from 'react'\r\nimport kruskalsGeneration from './kruskalsGeneration'\r\nimport './Maze.css'\r\n\r\n\r\nconst KruskalsMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        kruskalsGeneration.createMaze(difficulty);\r\n        \r\n    },[])\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default KruskalsMaze","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\PrimsMaze.js",["67"],"import React, { useEffect } from 'react'\r\nimport primsGeneration from './primsGeneration'\r\n\r\nconst PrimsMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        primsGeneration.createMaze(difficulty);\r\n        \r\n    },[])\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default PrimsMaze\r\n\r\n\r\n","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\EllersMaze.js",["68","69"],"import React, { useEffect,useState } from 'react'\r\nimport ellersGeneration from './ellersGeneration'\r\nimport './Maze.css'\r\n\r\n\r\nconst EllersMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        ellersGeneration.createMaze(difficulty);\r\n        \r\n    },[])\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default EllersMaze","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\ellersGeneration.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":24,"nodeType":"76","messageId":"77","endLine":1,"endColumn":33},{"ruleId":"78","severity":1,"message":"79","line":70,"column":38,"nodeType":"80","messageId":"81","endLine":70,"endColumn":40},{"ruleId":"74","severity":1,"message":"82","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"82","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":27,"column":7,"nodeType":"85","endLine":27,"endColumn":9,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"84","line":25,"column":7,"nodeType":"85","endLine":25,"endColumn":9,"suggestions":"87"},{"ruleId":"74","severity":1,"message":"82","line":1,"column":27,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":27,"column":7,"nodeType":"85","endLine":27,"endColumn":9,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'difficulty'. Either include it or remove the dependency array.","ArrayExpression",["91"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},{"desc":"94","fix":"97"},"Update the dependencies array to be: [difficulty]",{"range":"98","text":"99"},{"range":"100","text":"99"},{"range":"101","text":"99"},[602,604],"[difficulty]",[558,560],[594,596]]