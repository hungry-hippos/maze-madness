[{"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\index.js":"1","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\App.js":"2","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\reportWebVitals.js":"3","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeGeneration.js":"4","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\chickenMovement.js":"5","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\MediumMaze.js":"6","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\EasyMaze.js":"7","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeSolver.js":"8","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\primsGeneration.js":"9","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\kruskalsGeneration.js":"10","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\DFSMaze.js":"11","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\KruskalsMaze.js":"12","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\PrimsMaze.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1916,"mtime":1611442920639,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":8585,"mtime":1611174221199,"results":"18","hashOfConfig":"15"},{"size":2948,"mtime":1611120707260,"results":"19","hashOfConfig":"15"},{"size":646,"mtime":1611199710701,"results":"20","hashOfConfig":"15"},{"size":634,"mtime":1611176262462,"results":"21","hashOfConfig":"15"},{"size":6704,"mtime":1611285958539,"results":"22","hashOfConfig":"15"},{"size":7321,"mtime":1611436655447,"results":"23","hashOfConfig":"15"},{"size":7150,"mtime":1611434589239,"results":"24","hashOfConfig":"15"},{"size":710,"mtime":1611435427121,"results":"25","hashOfConfig":"15"},{"size":734,"mtime":1611435467952,"results":"26","hashOfConfig":"15"},{"size":693,"mtime":1611435633011,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ik2r73",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\index.js",[],["59","60"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\App.js",["61","62"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\reportWebVitals.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeGeneration.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\chickenMovement.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\MediumMaze.js",["63"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\EasyMaze.js",["64"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\mazeSolver.js",["65"],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\primsGeneration.js",[],"C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\kruskalsGeneration.js",["66"],"import mazeGeneration from \"./mazeGeneration\";\r\n\r\nconst kruskalsGeneration={\r\n    allSq:[],\r\n    edgeSet:{},\r\n    edgeArray:[],\r\n    intervalCode:0,\r\n    parents:[],\r\n    populateMaze(difficulty){\r\n\r\n        var numOfSquares=0;\r\n        var sqId=\"\";\r\n        var mazeId=\"\";\r\n        switch(difficulty){\r\n            case \"easy\":\r\n                numOfSquares=64;\r\n                sqId=\"easySquare\";\r\n                mazeId=\"easyMaze\";\r\n                break;\r\n            case \"medium\":\r\n                numOfSquares=300;\r\n                sqId=\"mediumSquare\";\r\n                mazeId=\"mediumMaze\";\r\n                break;\r\n            case \"hard\":\r\n                numOfSquares=1344;\r\n                sqId=\"hardSquare\";\r\n                mazeId=\"hardMaze\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        for (var i=0;i<numOfSquares;i++){\r\n            const sq=document.createElement('div');\r\n            sq.classList.add(sqId);\r\n            sq.classList.add('top');\r\n            sq.classList.add('bottom');\r\n            sq.classList.add('left');\r\n            sq.classList.add('right');\r\n            sq.setAttribute('key',i);\r\n            document.getElementById(mazeId).appendChild(sq);  \r\n            kruskalsGeneration.allSq.push(sq);\r\n        }\r\n    },\r\n    getNbrKey(currKey,direction){\r\n        const gridSize=kruskalsGeneration.allSq.length;\r\n        var rowSize=0;\r\n        switch(gridSize){\r\n            case 64:\r\n                rowSize=8;\r\n                break;\r\n            case 300:\r\n                rowSize=20;\r\n                break;\r\n            case 1344:\r\n                rowSize=56;\r\n                break;\r\n            default:\r\n                break;\r\n        }  \r\n\r\n        switch (direction){\r\n            case 'up':\r\n                return (currKey<rowSize)?-1:currKey-rowSize;\r\n            case 'down':\r\n                return ((gridSize-rowSize)<=currKey)?-1:currKey+rowSize;\r\n            case 'left':\r\n                return ((currKey%rowSize)===0)?-1:currKey-1;\r\n            case 'right':\r\n                return ((currKey+1)%rowSize===0)?-1:currKey+1;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    setToArray(){\r\n        for (let edgeString of kruskalsGeneration.edgeSet){\r\n            var u=0,v=0;\r\n            var isCommaFound=false;\r\n            //parses both u->v from string in set\r\n            for (var i=0;i<edgeString.length;i++){\r\n        \r\n                if (edgeString[i]===','){\r\n                    isCommaFound=true;\r\n                    continue;\r\n                }\r\n\r\n                if (!isCommaFound){\r\n                    u=u*10+parseInt(edgeString[i],10);\r\n                }else{\r\n                    v=v*10+parseInt(edgeString[i],10);\r\n                }\r\n            }\r\n\r\n            //creates array, inserts it at a random place in the edge array\r\n            const edgePair=[u,v];\r\n            kruskalsGeneration.edgeArray.push(edgePair);\r\n            const randomPos=Math.floor(Math.random()*kruskalsGeneration.edgeArray.length*.99);\r\n            const innerEdge=kruskalsGeneration.edgeArray[randomPos];\r\n            kruskalsGeneration.edgeArray[randomPos]=edgePair;\r\n            kruskalsGeneration.edgeArray[kruskalsGeneration.edgeArray.length-1]=innerEdge;\r\n        }\r\n    },\r\n    getEdgeSet(){\r\n        const gridSize=kruskalsGeneration.allSq.length;\r\n        kruskalsGeneration.edgeSet=new Set();\r\n        const nbrDirections=[\"up\",\"down\",\"right\",\"left\"];\r\n\r\n        //iterates through grid, finds all possible edges, stringifies them to store them into a set\r\n        for (var currKey=0;currKey<gridSize;currKey++){\r\n            for (var direction=0;direction<4;direction++){\r\n                const nbrKey=kruskalsGeneration.getNbrKey(currKey,nbrDirections[direction]);\r\n\r\n                if (nbrKey!==-1){\r\n                    const smaller=(currKey>nbrKey)?nbrKey:currKey;\r\n                    const larger=(currKey>nbrKey)?currKey:nbrKey;\r\n                    const edgePair=[smaller,larger];\r\n                    kruskalsGeneration.edgeSet.add(edgePair.toString());\r\n                }  \r\n            }\r\n        }\r\n    },\r\n    findParent(currKey){\r\n        \r\n        var keysStack=[];\r\n        while(kruskalsGeneration.parents[currKey]!==-1){\r\n            keysStack.push(currKey);\r\n            currKey=kruskalsGeneration.parents[currKey];\r\n        }\r\n        \r\n\r\n        const componentParent=currKey;\r\n        while(keysStack.length>0){\r\n            const lastKey=keysStack.pop();\r\n            kruskalsGeneration.parents[lastKey]=componentParent;\r\n        }\r\n\r\n        return componentParent;\r\n    },\r\n    unionParents(parentA,parentB){\r\n        kruskalsGeneration.parents[parentA]=parentB;\r\n    },\r\n    mergeSquares(keyA,keyB){\r\n\r\n        const delta=keyA-keyB;\r\n        if (delta===1){\r\n            kruskalsGeneration.allSq[keyA].classList.remove('left');\r\n            kruskalsGeneration.allSq[keyB].classList.remove('right');\r\n        }else if (delta===-1){\r\n            kruskalsGeneration.allSq[keyB].classList.remove('left');\r\n            kruskalsGeneration.allSq[keyA].classList.remove('right');\r\n        }else if (delta>1){\r\n            kruskalsGeneration.allSq[keyA].classList.remove('top');\r\n            kruskalsGeneration.allSq[keyB].classList.remove('bottom');\r\n        }else if (delta<-1){\r\n            kruskalsGeneration.allSq[keyA].classList.remove('bottom');\r\n            kruskalsGeneration.allSq[keyB].classList.remove('top');\r\n        }\r\n\r\n        \r\n        kruskalsGeneration.allSq[keyA].classList.add('visited');\r\n        kruskalsGeneration.allSq[keyB].classList.add('visited');\r\n    },\r\n    stackRandomMazeGenerator(){\r\n        const gridSize=kruskalsGeneration.allSq.length;\r\n        var timeInterval=0;\r\n        switch(gridSize){\r\n            case 64:\r\n                timeInterval=40;\r\n                break;\r\n            case 300:\r\n                timeInterval=15;\r\n                break;\r\n            case 1344:\r\n                timeInterval=1;\r\n                break;\r\n            default:\r\n                break;\r\n        };\r\n\r\n        for (var i=0;i<kruskalsGeneration.allSq.length;i++){\r\n            kruskalsGeneration.parents.push(-1);\r\n        }\r\n\r\n        kruskalsGeneration.intervalCode=setInterval(()=>{\r\n            if (kruskalsGeneration.edgeArray.length===0){\r\n                clearInterval(kruskalsGeneration.intervalCode);\r\n                return;\r\n            }\r\n\r\n            const currEdge=kruskalsGeneration.edgeArray.pop();\r\n            const u=currEdge[0], v=currEdge[1];\r\n            const parentU=kruskalsGeneration.findParent(u);\r\n            const parentV=kruskalsGeneration.findParent(v);\r\n\r\n            if (parentU!==parentV){\r\n                kruskalsGeneration.unionParents(parentU,parentV);\r\n                kruskalsGeneration.mergeSquares(u,v);\r\n            }\r\n        },timeInterval)\r\n    },\r\n\r\n    createMaze(difficulty){\r\n        kruskalsGeneration.populateMaze(difficulty);\r\n        kruskalsGeneration.getEdgeSet();\r\n        kruskalsGeneration.setToArray();\r\n        kruskalsGeneration.stackRandomMazeGenerator();\r\n    }\r\n}\r\n\r\nexport default kruskalsGeneration","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\DFSMaze.js",["67","68"],"import React, { useEffect,useState } from 'react'\r\nimport mazeGeneration from './mazeGeneration'\r\nimport './Maze.css'\r\n\r\nconst DFSMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        mazeGeneration.createMaze(difficulty);\r\n        \r\n    },[])\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default DFSMaze","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\KruskalsMaze.js",["69","70"],"import React, { useEffect,useState } from 'react'\r\nimport kruskalsGeneration from './kruskalsGeneration'\r\nimport './Maze.css'\r\n\r\n\r\nconst KruskalsMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        kruskalsGeneration.createMaze(difficulty);\r\n        \r\n    },[])\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default KruskalsMaze","C:\\Users\\thisi\\Desktop\\github repos\\maze-madness\\src\\appFiles\\PrimsMaze.js",["71"],"import React, { useEffect } from 'react'\r\nimport primsGeneration from './primsGeneration'\r\n\r\nconst PrimsMaze=(props)=>{\r\n    const {difficulty}=props;\r\n\r\n    var mazeId=\"\";\r\n    switch(difficulty){\r\n        case \"easy\":\r\n            mazeId='easyMaze';\r\n            break;\r\n        case 'medium':\r\n            mazeId='mediumMaze';\r\n            break;\r\n        case 'hard':\r\n            mazeId='hardMaze';\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        primsGeneration.createMaze(difficulty);\r\n        \r\n    },[])\r\n    return <React.Fragment>\r\n        <div id={mazeId}>\r\n        </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default PrimsMaze\r\n\r\n\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":24,"nodeType":"78","messageId":"79","endLine":1,"endColumn":33},{"ruleId":"76","severity":1,"message":"80","line":47,"column":18,"nodeType":"78","messageId":"79","endLine":47,"endColumn":28},{"ruleId":"76","severity":1,"message":"81","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"76","severity":1,"message":"81","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"82","severity":1,"message":"83","line":70,"column":38,"nodeType":"84","messageId":"85","endLine":70,"endColumn":40},{"ruleId":"76","severity":1,"message":"86","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":22},{"ruleId":"76","severity":1,"message":"81","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":26,"column":7,"nodeType":"89","endLine":26,"endColumn":9,"suggestions":"90"},{"ruleId":"76","severity":1,"message":"81","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":27,"column":7,"nodeType":"89","endLine":27,"endColumn":9,"suggestions":"91"},{"ruleId":"87","severity":1,"message":"88","line":25,"column":7,"nodeType":"89","endLine":25,"endColumn":9,"suggestions":"92"},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setLoading' is assigned a value but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'mazeGeneration' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'difficulty'. Either include it or remove the dependency array.","ArrayExpression",["95"],["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},{"desc":"98","fix":"101"},"Update the dependencies array to be: [difficulty]",{"range":"102","text":"103"},{"range":"104","text":"103"},{"range":"105","text":"103"},[583,585],"[difficulty]",[602,604],[558,560]]